legend.title = element_blank(),
legend.text = element_text(size=7, face="plain"),
legend.key.size = unit(.5, "cm"),
panel.grid.major = element_line(size = 0.1),
panel.grid.minor = element_line(size = 0.1),
panel.spacing=unit(.5, "cm"),
strip.text = element_text(size= 6, face = "plain"),
axis.text = element_text(face = "plain", size = 4, color="black"),
axis.ticks = element_line(color = "black", size = .2),
axis.title.x = element_text(face = "plain", size = 10,
margin = margin(t=10, r=0, b=0, l=0)),
axis.text.x = element_text(size = 6, color="black"), # tick text font size
axis.title.y = element_text(face = "plain", size = 10,
margin = margin(t=0, r=7, b=0, l=0)),
axis.text.y  = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(t=-0.35, r=.7, b=-4.7, l=0.3), "cm")
) + theme_bw()
ggplot(data, aes(x=Year, y=no_hours)) +
geom_point() +
the_theme +
facet_wrap(. ~temp_cat ~ Month)  +
ggtitle(scenario_name)
}
model_month_plot(observed_warm, "observed")
A <- model_month_plot(observed_warm, "observed")
ggsave("facet_interval_month.png", A, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
A <- model_month_plot(observed_warm, "observed")
A
model_month_plot <- function(data, scenario_name, month_name) {
the_theme = theme(legend.position="bottom",
legend.margin=margin(t=-.1, r=0, b=5, l=0, unit = 'cm'),
legend.title = element_blank(),
legend.text = element_text(size=7, face="plain"),
legend.key.size = unit(.5, "cm"),
panel.grid.major = element_line(size = 0.1),
panel.grid.minor = element_line(size = 0.1),
panel.spacing=unit(.5, "cm"),
strip.text = element_text(size= 6, face = "plain"),
axis.text = element_text(face = "plain", size = 4, color="black"),
axis.ticks = element_line(color = "black", size = .2),
axis.title.x = element_text(face = "plain", size = 10,
margin = margin(t=10, r=0, b=0, l=0)),
axis.text.x = element_text(size = 6, color="black"), # tick text font size
axis.title.y = element_text(face = "plain", size = 10,
margin = margin(t=0, r=7, b=0, l=0)),
axis.text.y  = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(t=-0.35, r=.7, b=-4.7, l=0.3), "cm")
) + theme_bw()
ggplot(data, aes(x=Year, y=no_hours)) +
geom_point() +
the_theme +
facet_wrap(~temp_cat) + facet_grid(cols=vars(data$temp_cat)) +
ggtitle(paste(scenario_name, month_name, sep=" - "))
}
ls()
warm_observed_Jan
ls()
rm(list=ls())
library(data.table)
library(dplyr)
library(ggplot2)
source_path = "/Users/hn/Documents/GitHub/Kirti/Chilling/code/chill_plot_core.R"
source(source_path)
##############################
############################## Global variables
##############################
data_dir = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/limited/"
file_names = c("modeled_hist.rds", "rcp45.rds", "rcp85.rds")
needed_cols = c("Year", "Month", "Temp",
"Chill_season", "climateScenario",
"CountyGroup", "location")
# iof = interval of interest
iof = c(c(-Inf, -2), c(-2, 4),
c(4, 6), c(6, 8),
c(8, 13), c(13, 16),
c(16, Inf))
iof_breaks = c(-Inf, -2, 4, 6, 8, 13, 16, Inf)
# These are the order of months in climate calendar!
month_no = c(9, 10, 11, 12,
1, 2, 3, 4,
5, 6, 7, 8)
month_name = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug" ,
"Sept", "Oct", "Nov", "Dec")
ls()
file = paste0(data_dir, file_names[2])
data = data.table(readRDS(file))
data = subset(data, select=needed_cols)
data_warm <- filter(data, CountyGroup == "warm")
data_cold <- filter(data, CountyGroup == "cold")
rm(data)
head(data_warm <- filter(data, CountyGroup == "warm")
data_cold <- filter(data, CountyGroup == "cold")
rm(data)
)
head(data_warm)
unique(climateScenario)
unique(data_warm$climateScenario)
unique(data_cold$climateScenario)
model_month_plot_double_facet <- function(data, scenario_name) {
the_theme = theme(legend.position="bottom",
legend.margin=margin(t=-.1, r=0, b=5, l=0, unit = 'cm'),
legend.title = element_blank(),
legend.text = element_text(size=7, face="plain"),
legend.key.size = unit(.5, "cm"),
panel.grid.major = element_line(size = 0.1),
panel.grid.minor = element_line(size = 0.1),
panel.spacing=unit(.5, "cm"),
strip.text = element_text(size= 6, face = "plain"),
axis.text = element_text(face = "plain", size = 4, color="black"),
axis.ticks = element_line(color = "black", size = .2),
axis.title.x = element_text(face = "plain", size = 10,
margin = margin(t=10, r=0, b=0, l=0)),
axis.text.x = element_text(size = 6, color="black"), # tick text font size
axis.title.y = element_text(face = "plain", size = 10,
margin = margin(t=0, r=7, b=0, l=0)),
axis.text.y  = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(t=-0.35, r=.7, b=-4.7, l=0.3), "cm")
) + theme_bw()
ggplot(data, aes(x=Year, y=no_hours)) +
geom_point() +
the_theme +
facet_wrap(. ~ temp_cat ~ Month)  +
ggtitle(scenario_name)
}
for(scenario in unique(data_warm$climateScenario)) {
for(month in month_no){
assign(x = paste("warm", scenario, month_name[month], sep="_"),
value = { model_month_plot(filter(data_warm, Month==month & climateScenario==scenario),
scenario_name = scenario)}
)
}
}
month_name = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug" ,
"Sept", "Oct", "Nov", "Dec")
for(scenario in unique(data_warm$climateScenario)) {
for(month in month_no){
assign(x = paste("warm", scenario, month_name[month], sep="_"),
value = { model_month_plot(filter(data_warm, Month==month & climateScenario==scenario),
scenario_name = scenario)}
)
}
}
month_no
for(month in month_no){print (month_name[month])}
for(scenario in unique(data_warm$climateScenario)) {
for(month in month_no){
assign(x = paste("warm", scenario, month_name[month], sep="_"),
value = { model_month_plot_double_facet(filter(data_warm, Month==month & climateScenario==scenario),
scenario_name = scenario)}
)
}
}
ls()
ls()
rm(list=ls())
library(data.table)
library(dplyr)
library(ggplot2)
source_path = "/Users/hn/Documents/GitHub/Kirti/Chilling/code/chill_plot_core.R"
source(source_path)
##############################
############################## Global variables
##############################
data_dir = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/limited/"
file_names = c("modeled_hist.rds", "rcp45.rds", "rcp85.rds")
needed_cols = c("Year", "Month", "Temp",
"Chill_season", "climateScenario",
"CountyGroup", "location")
# iof = interval of interest
iof = c(c(-Inf, -2), c(-2, 4),
c(4, 6), c(6, 8),
c(8, 13), c(13, 16),
c(16, Inf))
iof_breaks = c(-Inf, -2, 4, 6, 8, 13, 16, Inf)
# These are the order of months in climate calendar!
month_no = c(9, 10, 11, 12,
1, 2, 3, 4,
5, 6, 7, 8)
month_name = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug" ,
"Sept", "Oct", "Nov", "Dec")
weather_type = c("warm", "cold")
ls()
ls()
file_names = c("modeled_hist.rds", "rcp45.rds", "rcp85.rds")
file = paste0(data_dir, file_names[2])
data = data.table(readRDS(file))
data = subset(data, select=needed_cols)
# grouped_data <- data %>% group_by(location, climateScenario, Chill_season, Month)
carbon_type = "rcp45"
data_warm <- filter(data, CountyGroup == "warm")
data_cold <- filter(data, CountyGroup == "cold")
rm(data)
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "warm", scenario, sep="_"),
value = { model_plot_double_facet(filter(data_warm, Month==month & climateScenario==scenario),
scenario_name = scenario)}
)
}
model_plot_double_facet <- function(data, scenario_name) {
the_theme = theme(legend.position="bottom",
legend.margin=margin(t=-.1, r=0, b=5, l=0, unit = 'cm'),
legend.title = element_blank(),
legend.text = element_text(size=7, face="plain"),
legend.key.size = unit(.5, "cm"),
panel.grid.major = element_line(size = 0.1),
panel.grid.minor = element_line(size = 0.1),
panel.spacing=unit(.5, "cm"),
strip.text = element_text(size= 6, face = "plain"),
axis.text = element_text(face = "plain", size = 4, color="black"),
axis.ticks = element_line(color = "black", size = .2),
axis.title.x = element_text(face = "plain", size = 10,
margin = margin(t=10, r=0, b=0, l=0)),
axis.text.x = element_text(size = 6, color="black"), # tick text font size
axis.title.y = element_text(face = "plain", size = 10,
margin = margin(t=0, r=7, b=0, l=0)),
axis.text.y  = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(t=-0.35, r=.7, b=-4.7, l=0.3), "cm")
) + theme_bw()
ggplot(data, aes(x=Year, y=no_hours)) +
geom_point() +
the_theme +
facet_wrap(. ~ temp_cat ~ Month)  +
ggtitle(scenario_name)
}
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "warm", scenario, sep="_"),
value = { model_plot_double_facet(filter(data_warm, Month==month & climateScenario==scenario),
scenario_name = scenario)}
)
}
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "warm", scenario, sep="_"),
value = { model_plot_double_facet(filter(data_warm,climateScenario==scenario),
scenario_name = scenario)}
)
}
ls()
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste("cold", scenario, sep="_"),
value = { model_plot_double_facet(filter(data_cold, climateScenario==scenario),
scenario_name = scenario)}
)
}
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "cold", scenario, sep="_"),
value = { model_plot_double_facet(filter(data_cold, climateScenario==scenario),
scenario_name = scenario)}
)
}
ls()
rm(`cold_bcc-csm1-1, `cold_bcc-csm1-1-m`, `cold_BNU-ESM`)
rm(cold_bcc-csm1-1)
rm(cold_IPSL-CM5A-MR)
cold_IPSL-CM5A-MR
ls()
rcp45_warm_HadGEM2-ES365
rcp45_cold_CCSM4
ls()
gsub(pattern = "-", replacement = "_", x = bcc-csm1-1-m)
gsub(pattern = "-", replacement = "_", x = "bcc-csm1-1-m")
rm(list=ls())
library(data.table)
library(dplyr)
library(ggplot2)
source_path = "/Users/hn/Documents/GitHub/Kirti/Chilling/code/chill_plot_core.R"
source(source_path)
##############################
############################## Global variables
##############################
data_dir = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/limited/"
file_names = c("modeled_hist.rds", "rcp45.rds", "rcp85.rds")
needed_cols = c("Year", "Month", "Temp",
"Chill_season", "climateScenario",
"CountyGroup", "location")
# iof = interval of interest
iof = c(c(-Inf, -2), c(-2, 4),
c(4, 6), c(6, 8),
c(8, 13), c(13, 16),
c(16, Inf))
iof_breaks = c(-Inf, -2, 4, 6, 8, 13, 16, Inf)
# These are the order of months in climate calendar!
month_no = c(9, 10, 11, 12,
1, 2, 3, 4,
5, 6, 7, 8)
month_name = c("Jan", "Feb", "Mar", "Apr",
"May", "Jun", "Jul", "Aug" ,
"Sept", "Oct", "Nov", "Dec")
weather_type = c("warm", "cold")
ls()
file_names = c("modeled_hist.rds", "rcp45.rds", "rcp85.rds")
file = paste0(data_dir, file_names[2])
data = data.table(readRDS(file))
data = subset(data, select=needed_cols)
# grouped_data <- data %>% group_by(location, climateScenario, Chill_season, Month)
carbon_type = "rcp45"
data_warm <- filter(data, CountyGroup == "warm")
data_cold <- filter(data, CountyGroup == "cold")
rm(data)
the_theme = theme(legend.position="bottom",
legend.margin=margin(t=-.1, r=0, b=5, l=0, unit = 'cm'),
legend.title = element_blank(),
legend.text = element_text(size=7, face="plain"),
legend.key.size = unit(.5, "cm"),
panel.grid.major = element_line(size = 0.1),
panel.grid.minor = element_line(size = 0.1),
panel.spacing=unit(.5, "cm"),
strip.text = element_text(size= 6, face = "plain"),
axis.text = element_text(face = "plain", size = 4, color="black"),
axis.ticks = element_line(color = "black", size = .2),
axis.title.x = element_text(face = "plain", size = 10,
margin = margin(t=10, r=0, b=0, l=0)),
axis.text.x = element_text(size = 6, color="black"), # tick text font size
axis.title.y = element_text(face = "plain", size = 10,
margin = margin(t=0, r=7, b=0, l=0)),
axis.text.y  = element_blank(),
axis.ticks.y = element_blank(),
plot.margin = unit(c(t=-0.35, r=.7, b=-4.7, l=0.3), "cm")
) + theme_bw()
ls()
head(data_warm)
data_warm <- data_warm %>%
mutate(temp_cat=cut(Temp, breaks=iof_breaks)) %>%
group_by(Chill_season, Year, Month, climateScenario, temp_cat) %>%
summarise(no_hours = n())
head(data_warm)
data_cold <- data_cold %>%
mutate(temp_cat=cut(Temp, breaks=iof_breaks)) %>%
group_by(Chill_season, Year, Month, climateScenario, temp_cat) %>%
summarise(no_hours = n())
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "warm", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_warm,climateScenario==scenario),
scenario_name = scenario)}
)
}
ls()
rcp45_warm_BNU_ESM
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "cold", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_cold, climateScenario==scenario),
scenario_name = scenario)}
)
}
ls()
ls(pattern="rcp")
plots_list = ls(pattern="rcp")
v = 2
w = 3
z = c(v, w)
for (zz in z){print (zz)}
for (zz in z){print (as.character(zz))}
for (plotH in plots_list){
ggsave(paste0(as.character(plotH), ".png"), plotH,
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400)
}
for (plotH in plots_list){
ggsave(filename = paste0(as.character(plotH), ".png"), plot=plotH,
device = "png",
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400)
}
plots_list
ggsave("rcp45_cold_bcc_csm1_1.png", rcp45_cold_bcc_csm1_1, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
ggsave(paste0("rcp45_cold_CanESM2", ".png"), rcp45_cold_CanESM2, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
ggsave(paste0("rcp45_cold_CSIRO_Mk3_6_0", ".png"), rcp45_cold_CSIRO_Mk3_6_0, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
ggsave(paste0("rcp45_cold_HadGEM2_CC365", ".png"), rcp45_cold_HadGEM2_CC365, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_bcc_csm1_1, rcp45_cold_CanESM2, rcp45_cold_CSIRO_Mk3_6_0, rcp45_cold_HadGEM2_CC365)
plots_list
plots_list = ls(pattern="rcp")
plots_list
rm(rcp45_cold_bcc_csm1_1_m)
plots_list = ls(pattern="rcp")
plots_list
plots_list
class(plots_list[1])
ggsave(paste0("rcp45_cold_BNU_ESM", ".png"), rcp45_cold_BNU_ESM, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_BNU_ESM)
ggsave(paste0("rcp45_cold_GFDL_ESM2G", ".png"), rcp45_cold_GFDL_ESM2G, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_GFDL_ESM2G)
ggsave(paste0("rcp45_cold_inmcm4", ".png"), rcp45_cold_inmcm4, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_inmcm4)
ggsave(paste0("rcp45_cold_IPSL_CM5B_LR", ".png"), rcp45_cold_IPSL_CM5B_LR, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_IPSL_CM5B_LR)
plots_list = ls(pattern="rcp")
plots_list = ls(pattern="rcp")
plots_list
ggsave(paste0("rcp45_cold_CCSM4", ".png"), rcp45_cold_CCSM4, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_CCSM4)
ggsave(paste0("rcp45_cold_HadGEM2_ES365", ".png"), rcp45_cold_HadGEM2_ES365, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
ggsave(paste0("rcp45_cold_MIROC_ESM_CHEM", ".png"), rcp45_cold_MIROC_ESM_CHEM, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
ggsave(paste0("rcp45_cold_NorESM1_M", ".png"), rcp45_cold_NorESM1_M, path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
rm(rcp45_cold_CCSM4, rcp45_cold_HadGEM2_ES365, rcp45_cold_MIROC_ESM_CHEM, rcp45_cold_NorESM1_M)
plots_list = ls(pattern="rcp")
plots_list = ls(pattern="rcp")
plots_list = ls(pattern="rcp")
plots_list
ls()
ls()
plots_list
ggsave(paste0(plots_list[1], as.name(plots_list[1]), path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
)
ggsave(plots_list[1], as.name(plots_list[1]), path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400)
ggsave(filename= plots_list[1], plot=as.name(plots_list[1]), path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400, device="png")
ggsave(filename= plots_list[1], plot=eval(parse(plots_list[1])), path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400, device="png")
plots_list[1]
rcp45_cold_CNRM_CM5
ggsave(filename= plots_list[1], plot=get(plots_list[1]), path="/Users/hn/Documents/GitHub/Kirti/", width=20, height=20, unit="in", dpi=400, device="png")
for (plotH in plots_list){
ggsave(filename= plotH,
plot=get(plotH),
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400, device="png")
ggsave(filename = paste0(as.character(plotH), ".png"), plot=plotH,
device = "png",
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400)
}
for (plotH in plots_list){
ggsave(filename= plotH,
plot=get(plotH),
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400, device="png")
}
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "warm", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_warm,climateScenario==scenario),
scenario_name = scenario)}
)
}
########### cold
for(scenario in unique(data_cold$climateScenario)) {
assign(x = paste(carbon_type, "cold", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_cold, climateScenario==scenario),
scenario_name = scenario)}
)
file_name = paste(carbon_type, "cold", gsub(pattern = "-", replacement = "_", x = scenario)
}
plots_list = ls(pattern="rcp")
for (plotH in plots_list){
ggsave(filename= paste0(plotH, ".png"),
plot=get(plotH),
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400, device="png")
}
for(scenario in unique(data_warm$climateScenario)) {
assign(x = paste(carbon_type, "warm", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_warm, climateScenario==scenario),
scenario_name = scenario)}
)
}
for(scenario in unique(data_cold$climateScenario)) {
assign(x = paste(carbon_type, "cold", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_cold, climateScenario==scenario),
scenario_name = scenario)}
)
file_name = paste(carbon_type, "cold", gsub(pattern = "-", replacement = "_", x = scenario)
}
for(scenario in unique(data_cold$climateScenario)) {
assign(x = paste(carbon_type, "cold", gsub(pattern = "-", replacement = "_", x = scenario), sep="_"),
value = { model_plot_double_facet(filter(data_cold, climateScenario==scenario),
scenario_name = scenario)}
)
}
plots_list = ls(pattern="rcp")
for (plotH in plots_list){
ggsave(filename= paste0(plotH, ".png"),
plot=get(plotH),
path="/Users/hn/Documents/GitHub/Kirti/",
width=20, height=20, unit="in", dpi=400, device="png")
}
rm(list=ls())
library(data.table)
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/mine_chill_output_data_45.65625_-121.59375.txt", header = T)
matt = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/chill_output_data_45.65625_-121.59375.txt", header = T)
head(mine)
head(matt)
library(dplyr)
all.equal(mine, matt)
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/mine_chill_output_data_45.65625_-121.59375.txt", header = T)
all.equal(mine, matt)
head(mine)
head(matt)
mine_core = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/mine_Core_chill_output_data_45.65625_-121.59375.txt", header = T)
all.equal(mine_core, mine)
ls()
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/mine_chill_output_data_43.53125_-116.59375.txt", header = T)
matts = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/chill_output_data_43.53125_-116.59375.txt", header = T)
head(matts)
head(mine)
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/mine_chill_output_data_43.53125_-116.59375.txt", header = T)
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/chill_output_data_43.53125_-116.59375.txt", header = T)
head(mine)
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/check_point/chilling/chill_output_data_43.53125_-116.59375.txt", header = T)
head(mine)
mine = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/mine_chill_output_data_43.53125_-116.59375.txt", header = T)
matt = read.table(file = "/Users/hn/Desktop/Desktop/Kirti/chill_output_data_43.53125_-116.59375.txt", header = T)
head(mine)
head(matt)
chill_thresh <- function(x, threshold) {x >= threshold}
chill_thresh(10, 20)
chill_thresh(10, 5)
ls
ls()
head(matts)
